{"ast":null,"code":"var _jsxFileName = \"/Users/thainlao/Desktop/chat/ChatRepo/frontend/src/components/SettingUser.tsx\",\n  _s = $RefreshSig$();\nimport { useAppDispatch, useAppSelector } from \"../store/hoocs\";\nimport { useEffect, useState } from 'react';\nimport { getMe } from \"../store/reducers/authSlice\";\nimport '../styles/setting.css';\nimport { updateEmail, updateUsername } from \"../store/reducers/userServiceSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SettingUser = () => {\n  _s();\n  const user = useAppSelector(state => state.authSlice.user);\n  const dispatch = useAppDispatch();\n  useEffect(() => {\n    dispatch(getMe());\n  }, []);\n\n  //newEmail\n  const [isEditingEmail, setIsEditingEmail] = useState(false);\n  const [newEmail, setNewEmail] = useState((user === null || user === void 0 ? void 0 : user.email) || '');\n  const handleEmailChange = value => {\n    setNewEmail(value);\n  };\n  const handleSaveEmail = () => {\n    dispatch(updateEmail(newEmail));\n    setIsEditingEmail(false);\n  };\n  const handleEditEmail = () => {\n    setIsEditingEmail(true);\n  };\n  const handleCancelEditEmail = () => {\n    setIsEditingEmail(false);\n  };\n\n  //newUserUsername\n  const [isEditingUsername, setIsEditingUsername] = useState(false);\n  const [newUsername, setNewUsername] = useState((user === null || user === void 0 ? void 0 : user.username) || '');\n  const handleUsernameChange = value => {\n    setNewUsername(value);\n  };\n  const handleSaveUsername = () => {\n    dispatch(updateUsername(newUsername));\n    setIsEditingUsername(false);\n  };\n  const handleEditUsername = () => {\n    setIsEditingUsername(true);\n  };\n  const handleCancelEditUsername = () => {\n    setIsEditingUsername(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"setting\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u041F\\u043E\\u043B\\u044F \\u0434\\u043E\\u0441\\u0442\\u0443\\u043F\\u043D\\u044B\\u0435 \\u043A \\u0440\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u044E\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"setting_section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"\\u041F\\u043E\\u0447\\u0442\\u0430: \", user === null || user === void 0 ? void 0 : user.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Username: \", user === null || user === void 0 ? void 0 : user.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n_s(SettingUser, \"GaI50sNjkFEdzfQ2T/aiWE6hWxE=\", false, function () {\n  return [useAppSelector, useAppDispatch];\n});\n_c = SettingUser;\nexport default SettingUser;\nvar _c;\n$RefreshReg$(_c, \"SettingUser\");","map":{"version":3,"names":["useAppDispatch","useAppSelector","useEffect","useState","getMe","updateEmail","updateUsername","jsxDEV","_jsxDEV","SettingUser","_s","user","state","authSlice","dispatch","isEditingEmail","setIsEditingEmail","newEmail","setNewEmail","email","handleEmailChange","value","handleSaveEmail","handleEditEmail","handleCancelEditEmail","isEditingUsername","setIsEditingUsername","newUsername","setNewUsername","username","handleUsernameChange","handleSaveUsername","handleEditUsername","handleCancelEditUsername","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/thainlao/Desktop/chat/ChatRepo/frontend/src/components/SettingUser.tsx"],"sourcesContent":["import { useAppDispatch, useAppSelector } from \"../store/hoocs\";\nimport {useEffect, useState} from 'react';\nimport { getMe } from \"../store/reducers/authSlice\";\nimport '../styles/setting.css';\nimport { updateEmail, updateUsername } from \"../store/reducers/userServiceSlice\";\n\nconst SettingUser = () => {\n    const user = useAppSelector((state) => state.authSlice.user);\n    const dispatch = useAppDispatch();\n\n    useEffect(() => {\n        dispatch(getMe())\n      }, [])\n\n  //newEmail\n  const [isEditingEmail, setIsEditingEmail] = useState(false);\n  const [newEmail, setNewEmail] = useState<string>(user?.email || '');\n\n  const handleEmailChange = (value: string) => {\n    setNewEmail(value);\n  };\n\n  const handleSaveEmail = () => {\n    dispatch(updateEmail(newEmail))\n    setIsEditingEmail(false);\n  }\n\n  const handleEditEmail = () => {\n    setIsEditingEmail(true);\n  };\n  \n  const handleCancelEditEmail = () => {\n    setIsEditingEmail(false);\n  };\n\n    //newUserUsername\n  const [isEditingUsername, setIsEditingUsername] = useState(false);\n  const [newUsername, setNewUsername] = useState<string>(user?.username || '');\n\n  const handleUsernameChange = (value: string) => {\n    setNewUsername(value);\n  };\n\n  const handleSaveUsername = () => {\n    dispatch(updateUsername(newUsername))\n    setIsEditingUsername(false);\n  }\n\n  const handleEditUsername = () => {\n    setIsEditingUsername(true);\n  };\n  \n  const handleCancelEditUsername = () => {\n    setIsEditingUsername(false);\n  };\n  \n    return (\n        <div className=\"setting\">\n            <h2>Поля доступные к редактированию</h2>\n\n            <div className=\"setting_section\">\n                <h2>Почта: {user?.email}</h2>\n                <h2>Username: {user?.username}</h2>\n            </div>\n        </div>\n    )\n}\n\nexport default SettingUser;"],"mappings":";;AAAA,SAASA,cAAc,EAAEC,cAAc,QAAQ,gBAAgB;AAC/D,SAAQC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AACzC,SAASC,KAAK,QAAQ,6BAA6B;AACnD,OAAO,uBAAuB;AAC9B,SAASC,WAAW,EAAEC,cAAc,QAAQ,oCAAoC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjF,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAMC,IAAI,GAAGV,cAAc,CAAEW,KAAK,IAAKA,KAAK,CAACC,SAAS,CAACF,IAAI,CAAC;EAC5D,MAAMG,QAAQ,GAAGd,cAAc,CAAC,CAAC;EAEjCE,SAAS,CAAC,MAAM;IACZY,QAAQ,CAACV,KAAK,CAAC,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;;EAEV;EACA,MAAM,CAACW,cAAc,EAAEC,iBAAiB,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAACc,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAS,CAAAQ,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEQ,KAAK,KAAI,EAAE,CAAC;EAEnE,MAAMC,iBAAiB,GAAIC,KAAa,IAAK;IAC3CH,WAAW,CAACG,KAAK,CAAC;EACpB,CAAC;EAED,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC5BR,QAAQ,CAACT,WAAW,CAACY,QAAQ,CAAC,CAAC;IAC/BD,iBAAiB,CAAC,KAAK,CAAC;EAC1B,CAAC;EAED,MAAMO,eAAe,GAAGA,CAAA,KAAM;IAC5BP,iBAAiB,CAAC,IAAI,CAAC;EACzB,CAAC;EAED,MAAMQ,qBAAqB,GAAGA,CAAA,KAAM;IAClCR,iBAAiB,CAAC,KAAK,CAAC;EAC1B,CAAC;;EAEC;EACF,MAAM,CAACS,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGvB,QAAQ,CAAC,KAAK,CAAC;EACjE,MAAM,CAACwB,WAAW,EAAEC,cAAc,CAAC,GAAGzB,QAAQ,CAAS,CAAAQ,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEkB,QAAQ,KAAI,EAAE,CAAC;EAE5E,MAAMC,oBAAoB,GAAIT,KAAa,IAAK;IAC9CO,cAAc,CAACP,KAAK,CAAC;EACvB,CAAC;EAED,MAAMU,kBAAkB,GAAGA,CAAA,KAAM;IAC/BjB,QAAQ,CAACR,cAAc,CAACqB,WAAW,CAAC,CAAC;IACrCD,oBAAoB,CAAC,KAAK,CAAC;EAC7B,CAAC;EAED,MAAMM,kBAAkB,GAAGA,CAAA,KAAM;IAC/BN,oBAAoB,CAAC,IAAI,CAAC;EAC5B,CAAC;EAED,MAAMO,wBAAwB,GAAGA,CAAA,KAAM;IACrCP,oBAAoB,CAAC,KAAK,CAAC;EAC7B,CAAC;EAEC,oBACIlB,OAAA;IAAK0B,SAAS,EAAC,SAAS;IAAAC,QAAA,gBACpB3B,OAAA;MAAA2B,QAAA,EAAI;IAA+B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAExC/B,OAAA;MAAK0B,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC5B3B,OAAA;QAAA2B,QAAA,GAAI,kCAAO,EAACxB,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEQ,KAAK;MAAA;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC7B/B,OAAA;QAAA2B,QAAA,GAAI,YAAU,EAACxB,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEkB,QAAQ;MAAA;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAA7B,EAAA,CA5DKD,WAAW;EAAA,QACAR,cAAc,EACVD,cAAc;AAAA;AAAAwC,EAAA,GAF7B/B,WAAW;AA8DjB,eAAeA,WAAW;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}