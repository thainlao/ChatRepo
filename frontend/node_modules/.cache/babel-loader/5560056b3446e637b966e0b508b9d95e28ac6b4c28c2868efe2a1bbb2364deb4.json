{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from '../axios';\nconst initialState = {\n  user: null,\n  token: null,\n  isLoading: false,\n  status: null\n};\nexport const registerUser = createAsyncThunk('auth/registerUser', async ({\n  username,\n  password,\n  email\n}) => {\n  try {\n    const {\n      data\n    } = await axios.post('/auth/registration', {\n      username,\n      password,\n      email\n    });\n    if (data.token) {\n      window.localStorage.setItem('token', data.token);\n    }\n    return data;\n  } catch (e) {\n    console.log(e);\n  }\n});\nexport const loginUser = createAsyncThunk('auth/loginUse', async ({\n  password,\n  email\n}) => {\n  try {\n    const {\n      data\n    } = await axios.post('/auth/login', {\n      password,\n      email\n    });\n    if (data.token) {\n      window.localStorage.setItem('token', data.token);\n    }\n    return data;\n  } catch (e) {\n    console.log(e);\n  }\n});\nexport const getMe = createAsyncThunk('auth/getMe', async () => {\n  try {\n    const {\n      data\n    } = await axios.get('/auth/getuser');\n    return data;\n  } catch (e) {\n    console.log(e);\n  }\n});\nexport const addEthWallet = createAsyncThunk('auth/addEtherWallet');\nexport const authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    logout: state => {\n      state.token = null;\n      state.user = null;\n      state.isLoading = false;\n      state.status = null;\n    }\n  },\n  extraReducers: builder => {\n    //Register\n    builder.addCase(registerUser.pending, state => {\n      state.isLoading = true;\n      state.status = null;\n    });\n    builder.addCase(registerUser.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.status = action.payload.message;\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n    });\n    builder.addCase(registerUser.rejected, (state, action) => {\n      state.isLoading = false;\n      state.status = action.payload.message || 'Произошла ошибка';\n    });\n\n    //login\n    builder.addCase(loginUser.pending, state => {\n      state.isLoading = true;\n      state.status = null;\n    });\n    builder.addCase(loginUser.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.status = action.payload.message;\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n    });\n    builder.addCase(loginUser.rejected, (state, action) => {\n      state.isLoading = false;\n      state.status = action.payload.message || 'Произошла ошибка';\n    });\n    //get me\n    builder.addCase(getMe.pending, state => {\n      state.isLoading = true;\n      state.status = null;\n    });\n    builder.addCase(getMe.fulfilled, (state, action) => {\n      var _action$payload, _action$payload2;\n      state.isLoading = false;\n      state.status = null;\n      state.user = (_action$payload = action.payload) === null || _action$payload === void 0 ? void 0 : _action$payload.user;\n      state.token = (_action$payload2 = action.payload) === null || _action$payload2 === void 0 ? void 0 : _action$payload2.token;\n    });\n    builder.addCase(getMe.rejected, (state, action) => {\n      state.isLoading = false;\n      state.status = action.payload.message || 'Произошла ошибка';\n    });\n  }\n});\nexport const checkIsAuth = state => Boolean(state.token || localStorage.getItem('token'));\nexport const {\n  logout\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","initialState","user","token","isLoading","status","registerUser","username","password","email","data","post","window","localStorage","setItem","e","console","log","loginUser","getMe","get","addEthWallet","authSlice","name","reducers","logout","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","message","rejected","_action$payload","_action$payload2","checkIsAuth","Boolean","getItem","actions","reducer"],"sources":["C:/Users/sasha/OneDrive/Рабочий стол/chatapp/frontend/src/store/reducers/authSlice.ts"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\"\r\nimport axios from '../axios'\r\nimport { authState } from \"../../types/types\"\r\n\r\nconst initialState: authState = {\r\n    user: null,\r\n    token: null,\r\n    isLoading: false,\r\n    status: null,\r\n}\r\n\r\nexport const registerUser = createAsyncThunk('auth/registerUser', \r\n    async({username, password, email}: any) => {\r\n        try {\r\n            const { data } = await axios.post('/auth/registration', {\r\n                username, password, email\r\n            })\r\n            if (data.token) {\r\n                window.localStorage.setItem('token', data.token)\r\n            }\r\n\r\n            return data\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n})\r\n\r\nexport const loginUser = createAsyncThunk('auth/loginUse', \r\n    async({password, email}: any) => {\r\n        try {\r\n            const { data } = await axios.post('/auth/login', {\r\n              password, email\r\n            })\r\n            if (data.token) {\r\n                window.localStorage.setItem('token', data.token)\r\n            }\r\n\r\n            return data\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n})\r\n\r\nexport const getMe = createAsyncThunk('auth/getMe', \r\n  async() => {\r\n    try {\r\n      const { data } = await axios.get('/auth/getuser')\r\n      return data\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n})\r\n\r\nexport const addEthWallet = createAsyncThunk('auth/addEtherWallet')\r\n\r\nexport const authSlice = createSlice({\r\n    name: 'auth',\r\n    initialState,\r\n    reducers: {\r\n      logout: (state) => {\r\n        state.token = null;\r\n        state.user = null;\r\n        state.isLoading = false;\r\n        state.status = null;\r\n      }\r\n    },\r\n    extraReducers: (builder) => {\r\n        //Register\r\n          builder.addCase(registerUser.pending, (state) => {\r\n            state.isLoading = true;\r\n            state.status = null\r\n          });\r\n          builder.addCase(registerUser.fulfilled, (state, action) => {\r\n            state.isLoading = false;\r\n            state.status = action.payload.message\r\n            state.user = action.payload.user\r\n            state.token = action.payload.token\r\n          });\r\n          builder.addCase(registerUser.rejected, (state, action: any) => {\r\n            state.isLoading = false;\r\n            state.status = action.payload.message || 'Произошла ошибка'\r\n          });\r\n\r\n          //login\r\n          builder.addCase(loginUser.pending, (state) => {\r\n            state.isLoading = true;\r\n            state.status = null\r\n          });\r\n          builder.addCase(loginUser.fulfilled, (state, action) => {\r\n            state.isLoading = false;\r\n            state.status = action.payload.message\r\n            state.user = action.payload.user\r\n            state.token = action.payload.token\r\n          });\r\n          builder.addCase(loginUser.rejected, (state, action: any) => {\r\n            state.isLoading = false;\r\n            state.status = action.payload.message || 'Произошла ошибка'\r\n          });\r\n          //get me\r\n          builder.addCase(getMe.pending, (state) => {\r\n            state.isLoading = true;\r\n            state.status = null\r\n          });\r\n          builder.addCase(getMe.fulfilled, (state, action) => {\r\n            state.isLoading = false;\r\n            state.status = null\r\n            state.user = action.payload?.user\r\n            state.token = action.payload?.token\r\n          });\r\n          builder.addCase(getMe.rejected, (state, action: any) => {\r\n            state.isLoading = false;\r\n            state.status = action.payload.message || 'Произошла ошибка'\r\n          });\r\n}})\r\n\r\nexport const checkIsAuth = (state: authState) => Boolean(state.token || localStorage.getItem('token'));\r\nexport const {logout} = authSlice.actions\r\nexport default authSlice.reducer"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}