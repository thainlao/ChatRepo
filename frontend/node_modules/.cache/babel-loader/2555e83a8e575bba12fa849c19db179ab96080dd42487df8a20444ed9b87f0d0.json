{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from '../axios';\nconst initialState = {\n  user: null,\n  token: null,\n  isLoading: false,\n  status: null\n};\nexport const updateUsername = createAsyncThunk('auth/updateUsername', async newUsername => {\n  try {\n    const {\n      data\n    } = await axios.patch('/auth/updateusername', {\n      newUsername\n    });\n    return data;\n  } catch (error) {\n    console.log(error);\n    throw error;\n  }\n});\nexport const updateEmail = createAsyncThunk('auth/updateEmail', async newEmail => {\n  try {\n    const {\n      data\n    } = await axios.patch('/auth/updateemail', {\n      newEmail\n    });\n    return data;\n  } catch (error) {\n    console.log(error);\n    throw error;\n  }\n});\nexport const authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {}\n});\nexport default authSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","initialState","user","token","isLoading","status","updateUsername","newUsername","data","patch","error","console","log","updateEmail","newEmail","authSlice","name","reducers","extraReducers","builder","reducer"],"sources":["/Users/thainlao/Desktop/chat/ChatRepo/frontend/src/store/reducers/userServiceSlice.ts"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\"\nimport axios from '../axios'\nimport { authState } from \"../../types/types\"\n\nconst initialState: authState = {\n    user: null,\n    token: null,\n    isLoading: false,\n    status: null,\n}\n\nexport const updateUsername = createAsyncThunk('auth/updateUsername', async (newUsername: string) => {\n    try {\n      const { data } = await axios.patch('/auth/updateusername', { newUsername });\n      return data;\n    } catch (error) {\n      console.log(error);\n      throw error;\n    }\n  });\n  \n  export const updateEmail = createAsyncThunk('auth/updateEmail', async (newEmail: string) => {\n    try {\n      const { data } = await axios.patch('/auth/updateemail', { newEmail });\n      return data;\n    } catch (error) {\n      console.log(error);\n      throw error;\n    }\n  });\n\nexport const authSlice = createSlice({\n    name: 'auth',\n    initialState,\n    reducers: {},\n    extraReducers: (builder) => {\n}})\n\nexport default authSlice.reducer"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,UAAU;AAG5B,MAAMC,YAAuB,GAAG;EAC5BC,IAAI,EAAE,IAAI;EACVC,KAAK,EAAE,IAAI;EACXC,SAAS,EAAE,KAAK;EAChBC,MAAM,EAAE;AACZ,CAAC;AAED,OAAO,MAAMC,cAAc,GAAGR,gBAAgB,CAAC,qBAAqB,EAAE,MAAOS,WAAmB,IAAK;EACjG,IAAI;IACF,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMR,KAAK,CAACS,KAAK,CAAC,sBAAsB,EAAE;MAAEF;IAAY,CAAC,CAAC;IAC3E,OAAOC,IAAI;EACb,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IAClB,MAAMA,KAAK;EACb;AACF,CAAC,CAAC;AAEF,OAAO,MAAMG,WAAW,GAAGf,gBAAgB,CAAC,kBAAkB,EAAE,MAAOgB,QAAgB,IAAK;EAC1F,IAAI;IACF,MAAM;MAAEN;IAAK,CAAC,GAAG,MAAMR,KAAK,CAACS,KAAK,CAAC,mBAAmB,EAAE;MAAEK;IAAS,CAAC,CAAC;IACrE,OAAON,IAAI;EACb,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IAClB,MAAMA,KAAK;EACb;AACF,CAAC,CAAC;AAEJ,OAAO,MAAMK,SAAS,GAAGhB,WAAW,CAAC;EACjCiB,IAAI,EAAE,MAAM;EACZf,YAAY;EACZgB,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK,CAChC;AAAC,CAAC,CAAC;AAEH,eAAeJ,SAAS,CAACK,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}